#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("cpu_registers_address0", 5, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("cpu_registers_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("cpu_registers_we0", 1, hls_out, 0, "ap_memory", "mem_we", 1),
	Port_Property("cpu_registers_d0", 64, hls_out, 0, "ap_memory", "mem_din", 1),
	Port_Property("cpu_registers_q0", 64, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("cpu_registers_address1", 5, hls_out, 0, "ap_memory", "MemPortADDR2", 1),
	Port_Property("cpu_registers_ce1", 1, hls_out, 0, "ap_memory", "MemPortCE2", 1),
	Port_Property("cpu_registers_we1", 1, hls_out, 0, "ap_memory", "MemPortWE2", 1),
	Port_Property("cpu_registers_d1", 64, hls_out, 0, "ap_memory", "MemPortDIN2", 1),
	Port_Property("cpu_registers_q1", 64, hls_in, 0, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("cpu_memWrite", 1, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("cpu_regWrite", 1, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("cpu_branch", 1, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("cpu_memToReg", 1, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("cpu_memRead", 1, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("cpu_ALUSrc", 1, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("cpu_ALUOp_address0", 1, hls_out, 7, "ap_memory", "mem_address", 1),
	Port_Property("cpu_ALUOp_ce0", 1, hls_out, 7, "ap_memory", "mem_ce", 1),
	Port_Property("cpu_ALUOp_we0", 1, hls_out, 7, "ap_memory", "mem_we", 1),
	Port_Property("cpu_ALUOp_d0", 1, hls_out, 7, "ap_memory", "mem_din", 1),
	Port_Property("cpu_ALUOp_q0", 1, hls_in, 7, "ap_memory", "mem_dout", 1),
	Port_Property("cpu_ALUOp_address1", 1, hls_out, 7, "ap_memory", "MemPortADDR2", 1),
	Port_Property("cpu_ALUOp_ce1", 1, hls_out, 7, "ap_memory", "MemPortCE2", 1),
	Port_Property("cpu_ALUOp_we1", 1, hls_out, 7, "ap_memory", "MemPortWE2", 1),
	Port_Property("cpu_ALUOp_d1", 1, hls_out, 7, "ap_memory", "MemPortDIN2", 1),
	Port_Property("cpu_ALUOp_q1", 1, hls_in, 7, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("cpu_branch_op", 8, hls_in, 8, "ap_none", "in_data", 1),
	Port_Property("cpu_instr", 32, hls_in, 9, "ap_none", "in_data", 1),
	Port_Property("cpu_immediate", 64, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("cpu_instr_in", 32, hls_in, 11, "ap_none", "in_data", 1),
	Port_Property("cpu_ALU_signal", 8, hls_in, 12, "ap_none", "in_data", 1),
	Port_Property("cpu_ALU_result", 64, hls_in, 13, "ap_none", "in_data", 1),
	Port_Property("cpu_pc_i", 16, hls_in, 14, "ap_ovld", "in_data", 1),
	Port_Property("cpu_pc_o", 16, hls_out, 14, "ap_ovld", "out_data", 1),
	Port_Property("cpu_pc_o_ap_vld", 1, hls_out, 14, "ap_ovld", "out_vld", 1),
	Port_Property("sub_res", 64, hls_in, 15, "ap_none", "in_data", 1),
};
const char* HLS_Design_Meta::dut_name = "next_instr";
